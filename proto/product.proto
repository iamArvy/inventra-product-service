syntax = "proto3";

package product;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "common.proto";

message ProductInput {
  string name = 1;
  optional string description = 2;
  optional string image = 3;
  string category_id = 4;
  string sku = 5;
  int32 price = 6;
  int32 stock = 7;
  map<string, google.protobuf.Value> attributes = 8;
  repeated string tags = 9;
  
}

message PartialProductInput {
  optional string name = 1;
  optional string description = 2;
  optional string image = 3;
  optional string category_id = 4;
  optional string sku = 5;
  optional int32 price = 6;
  map<string, google.protobuf.Value> attributes = 7;
  repeated string tags = 8;
}

message CreateProductInput {
  string store_id = 1;
  ProductInput data = 2;
}

message UpdateProductInput {
  string id = 1;
  PartialProductInput data = 2;
}

message ProductCategory {
  string id = 1;
  string name = 2;
}

message Product{
  string id = 1;
  string name = 2;
  optional string description = 3;
  optional string image = 4;
  string store_id = 5;
  string category_id = 6;
  string sku = 7;
  int32 price = 8;
  int32 stock = 9;
  map<string, google.protobuf.Value> attributes = 10;
  repeated string tags = 11;
  ProductCategory category = 12;
  google.protobuf.Timestamp created_at = 13;
  google.protobuf.Timestamp deleted_at = 14;
}

message ProductList {
  repeated Product products = 1;
}

message ProductOrderBy {
  optional string name = 1; // Sort by key
  optional string created_at = 2; // Sort by value
  optional string updated_at = 3; // Sort by value
}

message ListProductInput {
  optional ProductOrderBy orderBy = 1;
  optional int32 skip = 2; // Number of items to skip for pagination
  optional int32 take = 3;
}

message ListProductByRelationInput {
  string id = 1;
  optional ListProductInput params = 2;
}

service ProductService {
  rpc Create (CreateProductInput) returns (Product) {}
  rpc Get (common.Id) returns (Product) {}
  rpc ListStoreProducts (ListProductByRelationInput) returns (ProductList) {}
  rpc ListCategoryProducts (ListProductByRelationInput) returns (ProductList) {}
  rpc List (ListProductInput) returns (ProductList) {}
  rpc Update (UpdateProductInput) returns (common.Status) {}
  rpc Delete (common.Id) returns (common.Status) {}
}
