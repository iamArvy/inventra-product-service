syntax = "proto3";

package product;

message Status {
  bool success = 1;
}

message Id {
  string id = 1;
}

message Name {
  string name = 1;
}

message ProductInput {
  string name = 1;
  string description = 2;
  string category_id = 3;
  repeated string tags = 4;
}

message PartialProductInput {
  optional string name = 1;
  optional string description = 2;
  optional string category_id = 3;
  repeated string tags = 4;
}

message CreateProductInput {
  string store_id = 1;
  ProductInput data = 2;
}

message UpdateProductInput {
  string id = 1;
  PartialProductInput data = 2;
}

message ProductStore {
  string id= 1;
  string name = 2;
  string logo = 3;
}

message ProductCategory {
  string id = 1;
  string name = 2;
}

message Product{
  string id = 1;
  string name = 2;
  string description = 3;
  string category_id = 4;
  string store_id = 5;
  string created_at = 6;
  string updated_at = 7;
}

message ProductWithRelationships{
  string id = 1;
  string name = 2;
  string description = 3;
  ProductStore store = 4;
  ProductCategory category = 5;
  string created_at = 7;
  string updated_at = 8;
}

message ProductList {
  repeated Product products = 1;
}


message ProductOrderBy {
  optional string name = 1; // Sort by key
  optional string created_at = 2; // Sort by value
  optional string updated_at = 3; // Sort by value
}

message ListProductInput {
  optional ProductOrderBy orderBy = 1;
  optional int32 skip = 2; // Number of items to skip for pagination
  optional int32 take = 3;
}

message ListProductByRelationInput {
  string id = 1;
  optional ListProductInput params = 2;
}

service ProductService {
  rpc Create (CreateProductInput) returns (Product) {}
  rpc Get (Id) returns (ProductWithRelationships) {}
  rpc ListStoreProducts (ListProductByRelationInput) returns (ProductList) {}
  rpc ListCategoryProducts (ListProductByRelationInput) returns (ProductList) {}
  rpc List (ListProductInput) returns (ProductList) {}
  rpc Update (UpdateProductInput) returns (Status) {}
  rpc Delete (Id) returns (Status) {}
}
